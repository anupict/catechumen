<div id='notifications_nuovo'>
	<h4>Notifications</h4>
	<p><HR>
		
	<!-- Notification for SKT Submission to PPP -->
	<% skt_ready = StaffAppraisal.count(:all, :conditions => ["eval1_by=? AND is_skt_submit =? AND is_skt_endorsed  IS ?", User.current_user.staff_id, true, nil]) %>
	<% if skt_ready > 0 %>
	  <%= link_to "#{skt_ready} Staff SKT ready for endorsement", { :controller => "staff_appraisals", :action => "index" } %><br>
	<% end %>
	
	<% skt_pyd_complete = StaffAppraisal.count(:all, :conditions => ["eval1_by=? AND is_skt_pyd_report_done =? AND skt_ppp_report  IS ?", User.current_user.staff_id, true, nil]) %>
	<% if skt_pyd_complete > 0 %>
	  <%= skt_pyd_complete %> <%= link_to "Staff SKT ready for Annual Review", { :controller => "staff_appraisals", :action => "index" } %><br>
	<% end %>
		
	<!-- Notification for Appraisal Request -->
	<% me_ppp = StaffAppraisal.count(:all, :conditions => ["eval1_by=? AND is_submit_for_evaluation =? AND is_submit_e2 IS ?", User.current_user.staff_id, true, nil]) %>
  <% me_ppk = StaffAppraisal.count(:all, :conditions => ["eval2_by=? AND is_submit_e2 =? AND is_complete IS ?", User.current_user.staff_id, true, nil]) %>
	<% me_eval = me_ppp + me_ppk %>
	<% if me_eval > 0 %>
    <%= me_eval %> <%= link_to "Staff appraisal for processing", { :controller => "staff_appraisals", :action => "index" } %><br>
  <% end %>
	

	
	<!-- Notification for Staff Leave Application -->
  <% a = Leaveforstaff.count(:all, :conditions => ["approval1_id=? AND approval1 IS ?", User.current_user.staff_id, nil]) %>
  <% b = Leaveforstaff.count(:all, :conditions => ["approval2_id=? AND approver2 IS ? AND approval1=?", User.current_user.staff_id, nil, true]) %>
  <% dash_leave = a+b %>
  <% if dash_leave == 0 %>
  <% else %>
    <%= link_to "#{dash_leave} leave application for approval", { :controller => "leaveforstaffs", :action => "index" } %><br/>
  <% end %>

	<!-- Notification for Staff Leave is approved -->
	<% asl = Leaveforstaff.find(:all, :select => "leavestartdate", :conditions => ['staff_id=? AND approval1 =? AND approver2 =? AND leavestartdate >?', User.current_user.staff_id, true, true, DateTime.now]).map(&:leavestartdate) %>
	<% if asl.size > 0 %>
		<%= link_to "Your leave request for #{asl} has been Approved", { :controller => "leaveforstaffs", :action => "index" } %><br/>
	<% end %>
	
	<!-- Notification for Staff Late Approval -->
  <% dash_attendance = StaffAttendance.count(:all, :conditions => ['approved_by =? AND is_approved IS ?', User.current_user.staff_id, nil]) %>
  <% if dash_attendance == 0 %>
  <% else %>
    <%= link_to "#{dash_attendance} late attendance for approval", { :controller => "staff_attendances", :action => "manage" } %><br>
  <% end %>
	
	<!-- Notification for travel request -->
	<% trvlreqst = TravelRequest.count(:all, :conditions => ['hod_id = ? AND hod_accept IS ?', User.current_user.staff_id, nil]) %>
	<% if trvlreqst > 0 %>
		<%= link_to "#{trvlreqst} Travel request that requires your approval", { :controller => "travel_requests", :action => "index" } %><br/>
	<% end %>
	
	<% trvlreqst_approved = TravelRequest.count(:all, :conditions => ['staff_id = ? AND hod_accept = ? AND hod_accept_on < ?', User.current_user.staff_id, true, Date.today + 3.days]) %>
	<% if trvlreqst_approved > 0 %>
		<%= link_to "#{trvlreqst_approved} Travel request has been approved", { :controller => "travel_requests", :action => "index" } %><br/>
	<% end %>
	
	<!-- Notification on Asset Defect -->
	
	<% asset_with_defects = AssetDefect.count(:all, :conditions => ['is_processed IS ? AND processed_by IS ? AND decision_by !=?', nil, nil, User.current_user.staff_id ]) %>
	<% if asset_with_defects > 0 %>
		<%= link_to "#{asset_with_defects} Defect reports require processing", { :controller => "asset_defects", :action => "index" } %><br/>
	<% end %>
	
	<% defect_action_for_approval = AssetDefect.count(:all, :conditions => ['is_processed = ? AND decision_by =? AND decision IS ?', true, User.current_user.staff_id, nil]) %>
	<% if defect_action_for_approval > 0 %>
		<%= link_to "#{defect_action_for_approval} Defect reports for decision", { :controller => "asset_defects", :action => "index" } %><br/>
	<% end %>
	
	<!-- Notification on Losses -->
	<%# if User.current_user.staff.position.code == "1" %>
	<% loss_require_endorse = AssetLoss.count(:all, :conditions => ['is_submit_to_hod = ? AND endorsed_on IS ?', true, nil ]) %>
	<% if loss_require_endorse > 0 %>
		<%= link_to "#{loss_require_endorse} Asset Losses require verifying", { :controller => "asset_losses", :action => "index" } %><br/>
	<% end %>
	<%# end -%>
	
	<!-- Notification on Asset Disposal -->
	<% disposal_require_verify = AssetDisposal.count(:all, :conditions => ['is_checked = ? AND is_verified = ? AND verified_by =?', true, true, User.current_user.staff_id ]) %>
	<% if disposal_require_verify > 0 %>
		<%= link_to "#{disposal_require_verify} Asset Disposal require verifying", { :controller => "asset_disposals", :action => "index" } %><br/>
	<% end %>
	
	
	
	
	<!--Notification for Asset Loan-->
	<% assetloanrequest = AssetLoan.count(:all, :conditions => ['loaned_by = ? AND is_approved IS ?', User.current_user.staff_id, nil]) %>
	<% if assetloanrequest > 0 %>
		<%= link_to "#{assetloanrequest} Asset Loan requests for approval", { :controller => "asset_loans", :action => "index" } %><br/>
	<% end %>

	<!-- Notification for Messages -->
  <% dash_messages = Message.count(:all, :include => :staffs, :conditions => ['staff_id =? AND messages.created_at > ?' , User.current_user.staff_id, DateTime.now - 1.day]) %>
  <% if dash_messages == 0 %>
    
  <% else %>
    <%= dash_messages %> <%= link_to "new messages", { :controller => "messages", :action => "index" } %><br>
  <% end %>

  <!-- Notification for Student Leave Approval -->
  <% c = User.find(:all, :select => "id", :conditions => ['roles.id =?', 7], :include => :roles).map(&:id) %>
  <% d = Array(User.current_user.id) %>
  <% dash_lfs = Leaveforstudent.count(:all, :conditions => ["studentsubmit =? AND approved IS ?", true, nil]) %>
  
  <% if (d & c == d) && dash_lfs > 0 %>
  	<%= link_to "#{dash_lfs} Student leave request for approval", { :controller => "leaveforstudents", :action => "index" } %><br/>
  <% else %>
	<% end %>
	
	<!-- Notification for Documents-->
	<!-- Case for CC1 -->
	<% mycc1docs = Document.count(:all, :conditions => ["cc1staff_id=? AND cc1closed IS ?", User.current_user.staff_id, nil]) %>
	<% mycc2docs = Document.count(:all, :conditions => ["cc2staff_id=? AND cc2closed IS ?", User.current_user.staff_id, nil]) %>
	<% mydocs = mycc1docs + mycc2docs %>
  <% if mydocs > 0 %>
  	<%= link_to "#{mydocs} new documents for your attention", { :controller => "documents", :action => "index" } %><br>
  <% else %>
	<% end %>
	
	
	<!-- Notification for Students Leave is approved -->
	<% al = Leaveforstudent.find(:all, :select => "leave_startdate", :conditions => ['student_id=? AND approved =? AND leave_startdate >?', User.current_user.student_id, true, DateTime.now]).map(&:leave_startdate) %>
	<% alc = Leaveforstudent.count(:all, :select => "leave_startdate", :conditions => ['student_id=? AND approved =? AND leave_startdate >?', User.current_user.student_id, true, DateTime.now]) %>
	<% if alc > 0 %>
		<%= link_to "Your leave request on #{al} has been Approved", { :controller => "leaveforstudents", :action => "index" } %><br/>
	<% end %>
<% permitted_to? :manage, :student_counseling_sessions do %><!--1Apr2013-->
	<% counsel_appt = StudentCounselingSession.count(:all, :conditions => ['is_confirmed IS ?', nil])%>
	<% if counsel_appt > 0 %>
		<%= link_to "#{counsel_appt} Student counseling appoinment to be confirmed", { :controller => "student_counseling_sessions", :action => "index" } %><br/>
	<% end %>
<% end %><!--1Apr2013-->	
	<!-- Notification for Students Dicsipline is approved -->
<% permitted_to? :manage, :student_discipline_cases do %><!--1Apr2013-->
	<% cases = StudentDisciplineCase.count(:all, :conditions => ['status =?', "New"]) %>
		<% if cases == 0 %>
		<% else %>
			<%= link_to "#{cases} new student discipline cases", student_discipline_cases_path %><br>
		<% end %>
<% end %>	<!--1Apr2013-->
	<!-- Notification for Topic Approval 
	<#% topic_need_approve = Topic.count(:all, :conditions => ['approvedby_id=? AND approved =?', User.current_user.staff_id, false]) %>
		<#% if topic_need_approve == 0 %>
		<#% else %>
			<#%= topic_need_approve %> <#%= link_to "Lesson plan topics need your approval", topics_path %><br>
		<#% end %>-->
		
	<!-- Notification for Training Plan Report-->
	<% report_need_comment = Trainingreport.count(:all, :conditions => ['tpa_id=? AND tpa_comment IS ?', User.current_user.staff_id, nil]) %>
		<% if report_need_comment == 0 %>
		<% else %>
			<%= link_to "#{report_need_comment} Lesson Plan Reports for your comment", trainingreports_path %><br>
		<% end %>
	
	
	
	
	<!-- Notification for New User -->
	<% permitted_to? :manage, :users do %>
		<% users_wo_roles = User.count(:all, :select => "id", :conditions => ["student_id IS? AND staff_id IS ?", nil, nil]) %>
		<% if users_wo_roles == 0 %>
		<% else %>
			<%= link_to "#{users_wo_roles} new users require authentication", users_path %><br/>
		<% end %>
	<% end %>
	

	
	
	<!-- Overdue Library Books for Staff -->
	<% latestaff = Librarytransaction.count(:all, :conditions => ["staff_id=? AND returnduedate < ? AND returneddate IS ?", User.current_user.staff_id, Time.now, nil]) %>
	<% if latestaff > 0 %>
	   <%= link_to "#{latestaff} Late Books at the library", { :controller => "librarytransactions", :action => "index" } %><br>
	<% else %>
	<% end %>
  
	<!--Notification for Document Registry-->
	
	<% tome = Document.find(:all, :joins => :staffs, :conditions => ['staff_id =?', User.current_user.staff_id], :order => "created_at DESC").count %>
	<% if tome > 0 %>
		<%= link_to "#{tome} Documents require your attention", {:controller => "documents", :action => "index"} %>
	<% else %>
	<% end %>
	<br>
	
	<% @documents=Document.all%>
	<% @a_creator=[]%>
	<% @a_filled=[]%>
	<% @documents.each do |x|%>
		<% @a_creator << x.prepared_by %>
		<% @a_filled << x.stafffiled_id %>
	<% end %>
	
	<% permitted_to? :manage, :documents do %>
		<% if (@a_creator.include? User.current_user.staff_id) || (@a_filled.include? User.current_user.staff_id) %>
			<% documents = Document.count(:all, :conditions => ["closed !=?",true]) %>
			<% if documents == 0 %>
			<% else %>
				<%= link_to "#{documents} Documents require processing", documents_path %><br/>
			<% end %>
		<% end %>
	<% end %>
	

	
</p>
	
</div>